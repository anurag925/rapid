// Code generated by "enumer -type=AccountStatus -json -transform=snake -trimprefix=AccountStatus"; DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _AccountStatusName = "createdonboardingactiveblocked"

var _AccountStatusIndex = [...]uint8{0, 7, 17, 23, 30}

const _AccountStatusLowerName = "createdonboardingactiveblocked"

func (i AccountStatus) String() string {
	if i < 0 || i >= AccountStatus(len(_AccountStatusIndex)-1) {
		return fmt.Sprintf("AccountStatus(%d)", i)
	}
	return _AccountStatusName[_AccountStatusIndex[i]:_AccountStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _AccountStatusNoOp() {
	var x [1]struct{}
	_ = x[AccountStatusCreated-(0)]
	_ = x[AccountStatusOnboarding-(1)]
	_ = x[AccountStatusActive-(2)]
	_ = x[AccountStatusBlocked-(3)]
}

var _AccountStatusValues = []AccountStatus{AccountStatusCreated, AccountStatusOnboarding, AccountStatusActive, AccountStatusBlocked}

var _AccountStatusNameToValueMap = map[string]AccountStatus{
	_AccountStatusName[0:7]:        AccountStatusCreated,
	_AccountStatusLowerName[0:7]:   AccountStatusCreated,
	_AccountStatusName[7:17]:       AccountStatusOnboarding,
	_AccountStatusLowerName[7:17]:  AccountStatusOnboarding,
	_AccountStatusName[17:23]:      AccountStatusActive,
	_AccountStatusLowerName[17:23]: AccountStatusActive,
	_AccountStatusName[23:30]:      AccountStatusBlocked,
	_AccountStatusLowerName[23:30]: AccountStatusBlocked,
}

var _AccountStatusNames = []string{
	_AccountStatusName[0:7],
	_AccountStatusName[7:17],
	_AccountStatusName[17:23],
	_AccountStatusName[23:30],
}

// AccountStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func AccountStatusString(s string) (AccountStatus, error) {
	if val, ok := _AccountStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _AccountStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to AccountStatus values", s)
}

// AccountStatusValues returns all values of the enum
func AccountStatusValues() []AccountStatus {
	return _AccountStatusValues
}

// AccountStatusStrings returns a slice of all String values of the enum
func AccountStatusStrings() []string {
	strs := make([]string, len(_AccountStatusNames))
	copy(strs, _AccountStatusNames)
	return strs
}

// IsAAccountStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i AccountStatus) IsAAccountStatus() bool {
	for _, v := range _AccountStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for AccountStatus
func (i AccountStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountStatus
func (i *AccountStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("AccountStatus should be a string, got %s", data)
	}

	var err error
	*i, err = AccountStatusString(s)
	return err
}
